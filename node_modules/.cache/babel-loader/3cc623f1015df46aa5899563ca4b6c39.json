{"ast":null,"code":"var _jsxFileName = \"/Users/hannahaldor/Documents/8x8/robodialler-app/src/PhoneNumberInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PhoneNumberInput(props) {\n  _s();\n\n  const [phoneNumbersToAdd, setPhoneNumbersToAdd] = useState(\"\");\n  const phoneNumberList = props.phoneNumberList;\n  const setPhoneNumberList = props.setPhoneNumberList;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const containsDuplicateElements = arr => {\n      console.log(arr);\n\n      for (let i = 0; i < arr.length; ++i) {\n        console.log(\"arr[i]:\", arr[i]);\n\n        for (let j = 0; j < arr.length; ++j) {\n          console.log(\"arr[j]:\", arr[j]);\n          if (i == j) continue;else if (arr[i] == arr[j]) {\n            console.log(\"true\");\n            return true;\n          } else console.log(\"arr[i]: \" + arr[i] + \" arr[j]: \" + arr[j]);\n        }\n      }\n\n      console.log(\"false\");\n      return false;\n    };\n\n    let valid = false;\n    let newList = [...phoneNumberList]; // Copy old list into newList\n\n    let addToOldList = phoneNumbersToAdd.filter(word => word.length > 0);\n    newList.push(addToOldList);\n    valid = !containsDuplicateElements(newList);\n    if (valid) setPhoneNumberList(newList);else alert(\"Input contains duplicate elements. Remove all duplicate elements and resubmit.\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: \"Enter a single phone number, or multiple phone numbers separated by spaces:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"phoneNumbersToAdd\",\n          name: \"phoneNumbersToAdd\",\n          onChange: e => {\n            setPhoneNumbersToAdd(e.target.value.split(' '));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PhoneNumberInput, \"EogkvIxS6oSw43V/rBMPGnBGgPU=\");\n\n_c = PhoneNumberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneNumberInput\");","map":{"version":3,"names":["React","useState","PhoneNumberInput","props","phoneNumbersToAdd","setPhoneNumbersToAdd","phoneNumberList","setPhoneNumberList","handleSubmit","e","preventDefault","containsDuplicateElements","arr","console","log","i","length","j","valid","newList","addToOldList","filter","word","push","alert","target","value","split"],"sources":["/Users/hannahaldor/Documents/8x8/robodialler-app/src/PhoneNumberInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function PhoneNumberInput(props) {\n    const [phoneNumbersToAdd, setPhoneNumbersToAdd] = useState(\"\");\n    const phoneNumberList = props.phoneNumberList;\n    const setPhoneNumberList = props.setPhoneNumberList;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const containsDuplicateElements = (arr) => {\n            console.log(arr);\n            for (let i = 0; i < arr.length; ++i) {\n                console.log(\"arr[i]:\", arr[i]);\n                for (let j = 0; j < arr.length; ++j) {\n                    console.log(\"arr[j]:\", arr[j]);\n                    if (i == j)\n                         continue;\n                    else if (arr[i] == arr[j]) {\n                         console.log(\"true\");\n                         return true;\n                    }\n                    else\n                        console.log(\"arr[i]: \" + arr[i] + \" arr[j]: \" + arr[j]);\n                }\n            }\n            console.log(\"false\");\n            return false;\n         };\n\n        let valid = false;\n        let newList = [...phoneNumberList]; // Copy old list into newList\n        let addToOldList = phoneNumbersToAdd.filter(word => word.length > 0);\n        newList.push(addToOldList);\n        valid = !containsDuplicateElements(newList);\n        if (valid)\n            setPhoneNumberList(newList);\n        else\n            alert(\"Input contains duplicate elements. Remove all duplicate elements and resubmit.\")\n    }\n    return (\n        <div>\n            <form className='form'>\n                <label htmlFor='phoneNumber'>Enter a single phone number, or multiple phone numbers separated by spaces:</label>\n                <br/>            \n                <div className='form-control'>\n                    <input\n                        type='text'\n                        id='phoneNumbersToAdd'\n                        name='phoneNumbersToAdd'\n                        onChange={e => {setPhoneNumbersToAdd(e.target.value.split(' '));}}\n                    />\n                    <button onClick={handleSubmit} type='submit'>Add</button>\n                </div>\n            </form>\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA;;EAC5C,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,EAAD,CAA1D;EACA,MAAMK,eAAe,GAAGH,KAAK,CAACG,eAA9B;EACA,MAAMC,kBAAkB,GAAGJ,KAAK,CAACI,kBAAjC;;EAEA,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACtBA,CAAC,CAACC,cAAF;;IACA,MAAMC,yBAAyB,GAAIC,GAAD,IAAS;MACvCC,OAAO,CAACC,GAAR,CAAYF,GAAZ;;MACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgC,EAAED,CAAlC,EAAqC;QACjCF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAG,CAACG,CAAD,CAA1B;;QACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACI,MAAxB,EAAgC,EAAEC,CAAlC,EAAqC;UACjCJ,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAG,CAACK,CAAD,CAA1B;UACA,IAAIF,CAAC,IAAIE,CAAT,EACK,SADL,KAEK,IAAIL,GAAG,CAACG,CAAD,CAAH,IAAUH,GAAG,CAACK,CAAD,CAAjB,EAAsB;YACtBJ,OAAO,CAACC,GAAR,CAAY,MAAZ;YACA,OAAO,IAAP;UACJ,CAHI,MAKDD,OAAO,CAACC,GAAR,CAAY,aAAaF,GAAG,CAACG,CAAD,CAAhB,GAAsB,WAAtB,GAAoCH,GAAG,CAACK,CAAD,CAAnD;QACP;MACJ;;MACDJ,OAAO,CAACC,GAAR,CAAY,OAAZ;MACA,OAAO,KAAP;IACF,CAlBF;;IAoBA,IAAII,KAAK,GAAG,KAAZ;IACA,IAAIC,OAAO,GAAG,CAAC,GAAGb,eAAJ,CAAd,CAvBsB,CAuBc;;IACpC,IAAIc,YAAY,GAAGhB,iBAAiB,CAACiB,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACN,MAAL,GAAc,CAA/C,CAAnB;IACAG,OAAO,CAACI,IAAR,CAAaH,YAAb;IACAF,KAAK,GAAG,CAACP,yBAAyB,CAACQ,OAAD,CAAlC;IACA,IAAID,KAAJ,EACIX,kBAAkB,CAACY,OAAD,CAAlB,CADJ,KAGIK,KAAK,CAAC,gFAAD,CAAL;EACP,CA/BD;;EAgCA,oBACI;IAAA,uBACI;MAAM,SAAS,EAAC,MAAhB;MAAA,wBACI;QAAO,OAAO,EAAC,aAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAK,SAAS,EAAC,cAAf;QAAA,wBACI;UACI,IAAI,EAAC,MADT;UAEI,EAAE,EAAC,mBAFP;UAGI,IAAI,EAAC,mBAHT;UAII,QAAQ,EAAEf,CAAC,IAAI;YAACJ,oBAAoB,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB,CAAD,CAApB;UAAiD;QAJrE;UAAA;UAAA;UAAA;QAAA,QADJ,eAOI;UAAQ,OAAO,EAAEnB,YAAjB;UAA+B,IAAI,EAAC,QAApC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GAtDuBN,gB;;KAAAA,gB"},"metadata":{},"sourceType":"module"}