{"ast":null,"code":"var _jsxFileName = \"/Users/hannahaldor/Documents/8x8/robodialler-app/src/PhoneNumberInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PhoneNumberInput(props) {\n  _s();\n\n  const [phoneNumbersToAdd, setPhoneNumbersToAdd] = useState(\"\");\n  const phoneNumberList = props.phoneNumberList;\n  const setPhoneNumberList = props.setPhoneNumberList;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const checkForDuplicateElements = arr => {\n      console.log(`arr: ${arr}`);\n\n      for (let i = 0; i < arr.length; ++i) {\n        console.log(`arr[${i}]: ${arr[i]}`);\n\n        for (let j = 0; j < arr[i].length; ++j) {\n          for (let k = 0; k < arr[i].length; ++k) {\n            if (j == k) continue;else {\n              if (arr[i][j] == arr[i][k]) return true;\n            }\n          }\n        }\n      }\n\n      console.log(\"No duplicate elements found\");\n      return false;\n    };\n\n    let valid = false;\n    let newList = [...phoneNumberList];\n    let toAddList = phoneNumbersToAdd.filter(word => word.length > 0);\n    newList.push(toAddList);\n    valid = !checkForDuplicateElements(newList);\n\n    if (valid) {} else {\n      alert(\"Input contains duplicate elements. Remove all duplicate elements and resubmit.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: \"Enter a single phone number, or multiple phone numbers separated by spaces:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"phoneNumbersToAdd\",\n          name: \"phoneNumbersToAdd\",\n          onChange: e => {\n            setPhoneNumbersToAdd(e.target.value.split(' '));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PhoneNumberInput, \"EogkvIxS6oSw43V/rBMPGnBGgPU=\");\n\n_c = PhoneNumberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneNumberInput\");","map":{"version":3,"names":["React","useState","PhoneNumberInput","props","phoneNumbersToAdd","setPhoneNumbersToAdd","phoneNumberList","setPhoneNumberList","handleSubmit","e","preventDefault","checkForDuplicateElements","arr","console","log","i","length","j","k","valid","newList","toAddList","filter","word","push","alert","target","value","split"],"sources":["/Users/hannahaldor/Documents/8x8/robodialler-app/src/PhoneNumberInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function PhoneNumberInput(props) {\n    const [phoneNumbersToAdd, setPhoneNumbersToAdd] = useState(\"\");\n    const phoneNumberList = props.phoneNumberList;\n    const setPhoneNumberList = props.setPhoneNumberList;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const checkForDuplicateElements = (arr) => {\n            console.log(`arr: ${arr}`);\n            for (let i = 0; i < arr.length; ++i)\n            {\n                console.log(`arr[${i}]: ${arr[i]}`);\n                for (let j = 0; j < arr[i].length; ++j)\n                {\n                    for (let k = 0; k < arr[i].length; ++k)\n                    {\n                        if (j == k)\n                            continue;\n                        else \n                        {\n                            if (arr[i][j] == arr[i][k])\n                                return true;\n                        }\n                    }\n                    \n                }\n            }\n            console.log(\"No duplicate elements found\");\n            return false;\n        };\n\n        let valid = false;\n        let newList = [...phoneNumberList];\n        let toAddList = phoneNumbersToAdd.filter(word => word.length > 0);\n\n        newList.push(toAddList);\n        valid = !checkForDuplicateElements(newList);\n        if (valid) {\n        }\n        else {\n            alert(\"Input contains duplicate elements. Remove all duplicate elements and resubmit.\")\n        }\n    }\n    return (\n        <div>\n            <form className='form'>\n                <label htmlFor='phoneNumber'>Enter a single phone number, or multiple phone numbers separated by spaces:</label>\n                <br/>            \n                <div className='form-control'>\n                    <input\n                        type='text'\n                        id='phoneNumbersToAdd'\n                        name='phoneNumbersToAdd'\n                        onChange={e => {setPhoneNumbersToAdd(e.target.value.split(' '));}}\n                    />\n                    <button onClick={handleSubmit} type='submit'>Add</button>\n                </div>\n            </form>\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA;;EAC5C,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAC,EAAD,CAA1D;EACA,MAAMK,eAAe,GAAGH,KAAK,CAACG,eAA9B;EACA,MAAMC,kBAAkB,GAAGJ,KAAK,CAACI,kBAAjC;;EAEA,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACtBA,CAAC,CAACC,cAAF;;IAEA,MAAMC,yBAAyB,GAAIC,GAAD,IAAS;MACvCC,OAAO,CAACC,GAAR,CAAa,QAAOF,GAAI,EAAxB;;MACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgC,EAAED,CAAlC,EACA;QACIF,OAAO,CAACC,GAAR,CAAa,OAAMC,CAAE,MAAKH,GAAG,CAACG,CAAD,CAAI,EAAjC;;QACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,GAAG,CAACG,CAAD,CAAH,CAAOC,MAA3B,EAAmC,EAAEC,CAArC,EACA;UACI,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,CAACG,CAAD,CAAH,CAAOC,MAA3B,EAAmC,EAAEE,CAArC,EACA;YACI,IAAID,CAAC,IAAIC,CAAT,EACI,SADJ,KAGA;cACI,IAAIN,GAAG,CAACG,CAAD,CAAH,CAAOE,CAAP,KAAaL,GAAG,CAACG,CAAD,CAAH,CAAOG,CAAP,CAAjB,EACI,OAAO,IAAP;YACP;UACJ;QAEJ;MACJ;;MACDL,OAAO,CAACC,GAAR,CAAY,6BAAZ;MACA,OAAO,KAAP;IACH,CAtBD;;IAwBA,IAAIK,KAAK,GAAG,KAAZ;IACA,IAAIC,OAAO,GAAG,CAAC,GAAGd,eAAJ,CAAd;IACA,IAAIe,SAAS,GAAGjB,iBAAiB,CAACkB,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACP,MAAL,GAAc,CAA/C,CAAhB;IAEAI,OAAO,CAACI,IAAR,CAAaH,SAAb;IACAF,KAAK,GAAG,CAACR,yBAAyB,CAACS,OAAD,CAAlC;;IACA,IAAID,KAAJ,EAAW,CACV,CADD,MAEK;MACDM,KAAK,CAAC,gFAAD,CAAL;IACH;EACJ,CAtCD;;EAuCA,oBACI;IAAA,uBACI;MAAM,SAAS,EAAC,MAAhB;MAAA,wBACI;QAAO,OAAO,EAAC,aAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAK,SAAS,EAAC,cAAf;QAAA,wBACI;UACI,IAAI,EAAC,MADT;UAEI,EAAE,EAAC,mBAFP;UAGI,IAAI,EAAC,mBAHT;UAII,QAAQ,EAAEhB,CAAC,IAAI;YAACJ,oBAAoB,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,GAArB,CAAD,CAApB;UAAiD;QAJrE;UAAA;UAAA;UAAA;QAAA,QADJ,eAOI;UAAQ,OAAO,EAAEpB,YAAjB;UAA+B,IAAI,EAAC,QAApC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GA7DuBN,gB;;KAAAA,gB"},"metadata":{},"sourceType":"module"}